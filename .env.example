# PotatoMesh Environment Configuration
# Copy this file to .env and customize for your setup

# =============================================================================
# REQUIRED SETTINGS
# =============================================================================

# API authentication token (required for ingestor communication)
# Generate a secure token: openssl rand -hex 32
API_TOKEN=your-secure-api-token-here

# Meshtastic connection target (required for ingestor)
# Common serial paths:
# - Linux: /dev/ttyACM0, /dev/ttyUSB0
# - macOS: /dev/cu.usbserial-*
# - Windows (WSL): /dev/ttyS*
# You may also provide an IP:PORT pair (e.g. 192.168.1.20:4403) or a
# Bluetooth address (e.g. ED:4D:9E:95:CF:60).
CONNECTION=/dev/ttyACM0

# =============================================================================
# SITE CUSTOMIZATION
# =============================================================================

# Your mesh network name
SITE_NAME=My Meshtastic Network

# Default Meshtastic channel (LongFast is the Meshtastic worldwide default)
CHANNEL=LongFast

# Default frequency for your region (915MHz is common in the Americas)
# Other options: 868MHz (Europe), 433MHz (Worldwide)
FREQUENCY=915MHz

# Map center coordinates (latitude, longitude)
# Default (Azores, Portugal): 38.761944, -27.090833
# Berlin, Germany: 52.502889, 13.404194
# Denver, Colorado: 39.7392, -104.9903
# London, UK: 51.5074, -0.1278
MAP_CENTER=38.761944,-27.090833

# Maximum distance to show nodes (kilometers)
MAX_DISTANCE=42

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================

# Chat link for your community (optional)
# Provide a URL or identifier for your preferred chat platform.
# Matrix rooms (e.g. #room:server) automatically turn into matrix.to links.
CONTACT_LINK='#potatomesh:dod.ngo'


# =============================================================================
# ADVANCED SETTINGS
# =============================================================================

# Debug mode (0=off, 1=on)
DEBUG=0

# Application environment (keep as production for Docker deployments)
# APP_ENV=production
# RACK_ENV=production

# Docker image architecture (linux-amd64, linux-arm64, linux-armv7)
POTATOMESH_IMAGE_ARCH=linux-amd64

# Docker Compose networking profile
# Leave unset for Linux hosts (default host networking).
# Set to "bridge" on Docker Desktop (macOS/Windows) if host networking
# is unavailable.
# COMPOSE_PROFILES=bridge

# Meshtastic channel index (0=primary, 1=secondary, etc.)
CHANNEL_INDEX=0
